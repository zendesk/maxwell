#!/usr/bin/env ruby

require 'bundler/setup'
require 'tempfile'
require 'octokit'

REPO="zendesk/maxwell"

BINDIR=File.dirname(__FILE__)

CURRENT_REV=`#{BINDIR}/current_rev`

SUBCOMMANDS=%w(changelog bump build tag release docs nexus)

if !( ($version = ARGV[0]) && $version =~ /^\d+\.\d+\.\d+(-\w+)?$/)
  message =  "usage: #{$0} VERSION [#{SUBCOMMANDS.join('|')}]\n"
  message += "  (current version is #{CURRENT_REV})"
  abort(message)
end

puts "Releasing version: #{$version}"

if ( $command = ARGV[1] )
  unless SUBCOMMANDS.include?($command)
    abort("unknown subcommand: #{$command}")
  end
end

def do_system(cmd, *args)
  system(cmd, *args)
  abort "command #{cmd} #{args.join(' ')} failed" unless $?.success?
end

def bump
  do_system(BINDIR + "/bump", $version)
  puts "Ok, bumped the version to #{$version}.  Dropping you to a shell with the changes in the workspace,"
  puts "please verify that the version bump went well and then exit the shell."
  do_system("/bin/bash -i")
end

def build
  do_system("make -C #{BINDIR}/.. package MAXWELL_VERSION=#{$version}")

  commit_template = Tempfile.new('maxwell_build')
  commit_template.write <<-EOL
v#{$version}, "pithy title here"

 - list changes
EOL

  git_log = "git log --pretty=format:'%h -%d %s %cr <%an>' --abbrev-commit --date=relative v#{CURRENT_REV}..HEAD"

  commit_template.write(`#{git_log}`.gsub(/^/, '# '))
  commit_template.close

  do_system("git commit -av -t #{commit_template.path}")
  do_system("git push origin HEAD:master")
end

def tag
  do_system("git tag v#{$version}")
  do_system("git push --tags")
end

def prerelease?
  !!($version =~ /-\w+$/)
end

def release
  release_title = `git show -s HEAD --format='%s'`
  release_body = `git show -s HEAD --format='%b'`

  puts "title: #{release_title}"
  puts "body: #{release_body}"

  client = Octokit::Client.new(netrc: true)

  release = client.create_release(REPO, 'v' + $version, name: release_title, body: release_body, prerelease: prerelease?)
  client.upload_asset(release.url, BINDIR + "/../target/maxwell-#{$version}.tar.gz")
end

def docs
  do_system(BINDIR + "/../docs/push")
end

def changelog
  do_system(BINDIR + "/mkchangelog > " + BINDIR + "/../CHANGELOG.md")
  do_system("git commit -am 'update changelog'")
  do_system("git push")
end

def nexus
  do_system("mvn deploy -DskipTests=true")
end

if $command
  send($command)
else
  bump unless prerelease?
  build
  tag
  release
  sleep 2
  changelog
  docs
  nexus
end

